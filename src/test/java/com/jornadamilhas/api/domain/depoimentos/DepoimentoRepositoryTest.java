package com.jornadamilhas.api.domain.depoimentos;

import java.io.IOException;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.data.domain.PageRequest;
import org.springframework.test.context.ActiveProfiles;
import static org.assertj.core.api.Assertions.assertThat;

@DataJpaTest
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
@ActiveProfiles("test")
class DepoimentoRepositoryTest {

    @Autowired
    private DepoimentoRepository depoimentoRepository;
    
    @Autowired
    private TestEntityManager em;
    
    @Test
    @DisplayName("Deveria retornar uma página com três depoimentos")
    void testRetornarDepoimentosAleatorios() throws IOException {
        
        var depoimentosParaMostrar = 3;
        
        cadastrarDepoimento("walisson", "Teste1");
        cadastrarDepoimento("walisson", "Teste2");
        cadastrarDepoimento("walisson", "Teste3");
        cadastrarDepoimento("Fibe"    , "Teste4");
        
        var paging = PageRequest.of(0, depoimentosParaMostrar);
        var depoimentos = depoimentoRepository.retornarDepoimentosAleatorios(paging);
        
        assertThat(depoimentos.getNumberOfElements()).isEqualTo(depoimentosParaMostrar);
    }
    
    public Depoimento cadastrarDepoimento(String nome, String texto) throws IOException {
        var depoimento = new Depoimento(new DadosCadastroDepoimento(nome, texto, ""));
        em.persist(depoimento);
        
        return depoimento;
    }
}
